/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.9.0. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire  clk // clock


      // Outputs
    , output wire  out0
    , output wire  out1
    );
  wire  c$app_arg;
  wire [25:0] c$s1_case_alt;
  wire  result_0;
  wire [24:0] s;
  wire  i;
  reg [25:0] s1 = {25'd0,   1'b0};
  wire [0:0] c$app_arg_0;
  wire [1:0] result;

  // resetGen begin
  // pragma translate_off
  reg  rst;
  localparam reset_period = 1000000 - 10 + (1 * 100000);
  initial begin
    #1 rst =  1 ;
    #reset_period rst =  0 ;
  end
  assign c$app_arg = rst;
  // pragma translate_on
  // resetGen end

  assign c$s1_case_alt = (s == 25'd26999999) ? {25'd0,
                                                ~ i} : {s + 25'd1,   i};

  assign result_0 = s1[0:0];

  assign s = s1[25:1];

  assign i = s1[0:0];

  // register begin
  always @(posedge clk or  posedge  c$app_arg) begin : s1_register
    if ( c$app_arg) begin
      s1 <= {25'd0,   1'b0};
    end else begin
      s1 <= c$s1_case_alt;
    end
  end
  // register end

  assign result = {(c$app_arg_0),   1'b0};

  assign c$app_arg_0 = result_0 ? 1'b1 : 1'b0;

  assign out0 = result[1:1];

  assign out1 = result[0:0];


endmodule

