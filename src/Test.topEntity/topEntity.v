/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.9.0. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire  clk // clock


      // Outputs
    , output wire  result_0
    , output wire  result_1
    );
  wire [26:0] c$s1_case_alt;
  wire  result_4;
  wire [25:0] s;
  wire  i;
  reg [26:0] s1 = {26'd0,   1'b0};
  wire [0:0] c$app_arg;
  wire  c$rst;
  wire [1:0] result;

  assign c$s1_case_alt = (s == 26'd49999999) ? {26'd0,
                                                ~ i} : {s + 26'd1,   i};

  assign result_4 = s1[0:0];

  assign s = s1[26:1];

  assign i = s1[0:0];

  assign c$rst = (1'b0);

  // register begin
  always @(posedge clk or  posedge  c$rst) begin : s1_register
    if ( c$rst) begin
      s1 <= {26'd0,   1'b0};
    end else begin
      s1 <= c$s1_case_alt;
    end
  end
  // register end

  assign result = {(c$app_arg),   1'b0};

  assign c$app_arg = result_4 ? 1'b1 : 1'b0;

  assign result_0 = result[1:1];

  assign result_1 = result[0:0];


endmodule

